const nav = document.getElementById("nav")
const basics = document.getElementById("Basics") 
const insruments = document.getElementById("Insruments")
nav.addEventListener('click', function() {
    const navStyle = parseInt(window.getComputedStyle(nav).top);
    nav.style.top = navStyle === 0 ? "-500px" : "0px"
})
nav.addEventListener('dblclick', function() {
    window.location.href = "index.html"
})



basics.addEventListener(('click'), function() {
    window.location.href = 'basics.html'
})
insruments.addEventListener(('click'), function() {
    window.location.href = 'insruments.html'
})





// –î–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤—Å–µ—Ö –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é
document.querySelectorAll('.item').forEach(item => {
    item.addEventListener('click', () => {
        const pageMap = {
            '–í–∏–¥—ã –∏–∑–ª—É—á–µ–Ω–∏—è': '#types',
            '–ü—Ä–∏—Ä–æ–¥–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏': '#sources',
            '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –≠–ú–ò': '#tech',
            '–î–∏–∞–ø–∞–∑–æ–Ω—ã —á–∞—Å—Ç–æ—Ç': '#freq',
            '–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã': '#facts'
        };
        
        const anchor = pageMap[item.textContent.trim()];
        if (anchor) {
            window.location.href = `basics.html${anchor}`;
        }
    });
});

// –î–ª—è –¥—Ä—É–≥–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü (–ø—Ä–∏–º–µ—Ä –¥–ª—è "–†–∏—Å–∫–∏ –∏ —É–≥—Ä–æ–∑—ã")
const influence = document.getElementById("Influence");
if (influence) {
    influence.addEventListener('click', () => {
        window.location.href = 'influence.html';
    });
}




// –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Ç–∞–±–ª–∏—Ü—ã
function sortTable(column) {
    const table = document.getElementById("dynamicTable");
    const rows = Array.from(table.rows).slice(1); // –ò—Å–∫–ª—é—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    const isNumeric = !isNaN(parseFloat(rows[0].cells[column].getAttribute('data-sort')));
    
    rows.sort((a, b) => {
        const aVal = a.cells[column].getAttribute('data-sort') || a.cells[column].innerText;
        const bVal = b.cells[column].getAttribute('data-sort') || b.cells[column].innerText;
        
        return isNumeric ? 
            parseFloat(aVal) - parseFloat(bVal) :
            aVal.localeCompare(bVal);
    });

    // –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–µ–ª–æ —Ç–∞–±–ª–∏—Ü—ã
    table.tBodies[0].append(...rows);
}

// –ü–æ–∏—Å–∫ –ø–æ —Ç–∞–±–ª–∏—Ü–µ
document.getElementById("searchInput").addEventListener("input", function(e) {
    const filter = e.target.value.toLowerCase();
    const rows = document.querySelectorAll("#dynamicTable tbody tr");
    
    rows.forEach(row => {
        const text = row.innerText.toLowerCase();
        row.style.display = text.includes(filter) ? "" : "none";
    });
});


// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤—ã—Ö –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é
document.querySelectorAll('.item').forEach(item => {
    item.addEventListener('click', () => {
        const pageMap = {
            '–†–∏—Å–∫–∏ –∏ —É–≥—Ä–æ–∑—ã': 'influence.html#risks',
            '–ú–µ—Ç–æ–¥—ã –∑–∞—â–∏—Ç—ã': 'influence.html#protection',
            '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –≤ –±—ã—Ç—É': 'influence.html#safety',
            '–ù–∞—É—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ': 'influence.html#science',
            '–ú–∏—Ñ—ã vs –†–µ–∞–ª—å–Ω–æ—Å—Ç—å': 'influence.html#myths'
        };
        
        const anchor = pageMap[item.textContent.trim()];
        if (anchor) {
            window.location.href = anchor;
        }
    });
});





// –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞
function calculateRisk() {
    const answers = [
        parseInt(document.querySelector('input[name="q1"]:checked')?.value || 0),
        parseInt(document.querySelector('input[name="q2"]:checked')?.value || 0),
        parseInt(document.querySelector('input[name="q3"]:checked')?.value || 0),
        parseInt(document.querySelector('input[name="q4"]:checked')?.value || 0),
        parseInt(document.querySelector('input[name="q5"]:checked')?.value || 0),
        parseInt(document.querySelector('input[name="q6"]:checked')?.value || 0),
        parseInt(document.querySelector('input[name="q7"]:checked')?.value || 0),
        parseInt(document.querySelector('input[name="q8"]:checked')?.value || 0)
    ];
    
    const total = answers.reduce((a, b) => a + b, 0);
    let result, color;

    if(total <= 15) {
        result = "–ù–∏–∑–∫–∏–π —Ä–∏—Å–∫ üü¢";
        color = "#4CAF50";
    } else if(total <= 30) {
        result = "–£–º–µ—Ä–µ–Ω–Ω—ã–π —Ä–∏—Å–∫ üü°";
        color = "#FFC107";
    } else {
        result = "–í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫ üî¥";
        color = "#F44336";
    }

    document.getElementById("result").innerHTML = `
        <h3 style="color: ${color}">${result}</h3>
        <p>–û–±—â–∏–π –±–∞–ª–ª: ${total}/40</p>
        <div class="recommendations">${getRecommendations(total)}</div>
    `;
}

// –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
function getRecommendations(score) {
    let tips = [];
    if(score > 30) tips.push("üîá –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ä–µ–∂–∏–º ¬´–ù–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å¬ª –Ω–æ—á—å—é");
    if(score > 20) tips.push("üè† –ü–µ—Ä–µ–Ω–µ—Å–∏—Ç–µ —Ä–æ—É—Ç–µ—Ä –∏–∑ –∂–∏–ª—ã—Ö –∫–æ–º–Ω–∞—Ç");
    if(score > 15) tips.push("üéß –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–æ–≤–æ–¥–Ω—ã–µ –Ω–∞—É—à–Ω–∏–∫–∏");
    
    return tips.length > 0 
        ? "<ul>" + tips.map(t => `<li>${t}</li>`).join("") + "</ul>"
        : "–í–∞—à–∏ –ø—Ä–∏–≤—ã—á–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã! üëç";
}


// –ü—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–∫–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤
const devices = {
    wifi: { power: 0.1, distance: 1 },
    phone: { power: 2, distance: 0.05 },
    microwave: { power: 700, distance: 0.5 }
};

function fillPreset() {
    const device = document.getElementById("deviceSelect").value;
    if(device !== "custom") {
        document.getElementById("power").value = devices[device].power;
        document.getElementById("distance").value = devices[device].distance;
    }
}

function calculateEMF() {
    const P = parseFloat(document.getElementById("power").value) || 0;
    const r = parseFloat(document.getElementById("distance").value) || 1;
    
    if(P <= 0 || r <= 0) {
        alert("‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è!");
        return;
    }

    const I = P / (4 * Math.PI * r**2);
    const resultElement = document.getElementById("intensityValue");
    const scaleBar = document.getElementById("scaleBar");
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π
    resultElement.textContent = `${I.toFixed(4)} –í—Ç/–º¬≤`;
    resultElement.style.color = getColor(I);
    
    // –ê–Ω–∏–º–∞—Ü–∏—è —à–∫–∞–ª—ã
    const widthPercentage = Math.min((I / 50) * 100, 100);
    scaleBar.style.width = `${widthPercentage}%`;
    
    // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
    let statusText = "";
    if(I < 10) statusText = "‚úÖ –í –ø—Ä–µ–¥–µ–ª–∞—Ö –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –Ω–æ—Ä–º—ã";
    else if(I < 50) statusText = "‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è";
    else statusText = "üö® –û–ø–∞—Å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å! –ò–∑–±–µ–≥–∞–π—Ç–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞";
    
    resultElement.nextElementSibling?.remove();
    resultElement.insertAdjacentHTML("afterend", 
        `<div class="status">${statusText}</div>`);
}

function getColor(intensity) {
    if(intensity < 10) return "#4CAF50";
    if(intensity < 50) return "#FFC107";
    return "#F44336";
}


// –ü–æ–∏—Å–∫ –ø–æ –≥–ª–æ—Å—Å–∞—Ä–∏—é
document.getElementById("glossarySearch").addEventListener("input", function(e) {
    const query = e.target.value.toLowerCase();
    document.querySelectorAll(".term").forEach(term => {
        const text = term.innerText.toLowerCase();
        term.style.display = text.includes(query) ? "block" : "none";
    });
});